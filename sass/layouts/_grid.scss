.row {
    max-width: $grid-width;
    /* Max width means if there's not enough space in viewport then it will fill whatever it can */
    background-color: #eee;
    margin: 0 auto;
    /* Used to center a block element inside of another block element */

    /* Not selects everything EXCEPT the last-child */
    &:not(:last-child) {
        margin-bottom: $gutter-vertical;
    }

    @include clearfix;

    /* The ^ symbol will select all elements that STARTS with "...." */
    /* THe * symbol will select all elements that CONTAIN with "...." */
    /* THe $ symbol will select all elements that ENDS with "...." */
    [class^="col-"] {
        background-color: orangered;
        float: left;

        /* We want the margin on the right of all elements except the last element */
        &:not(:last-child) {
            margin-right: $gutter-horizontal;
        }
    }

    .col-1-of-2 {
        /* In the calc function of CSS, if we want to use VARIABLES then we have to wrap it in # {} */
        width: calc((100% - #{$gutter-horizontal}) / 2);
    }

    .col-1-of-3 {
        width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }

    /* Gutter width added back in otherwise there will be a margin right or gutter right of last child */
    .col-2-of-3 {
        width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
    }

    .col-1-of-4 {
        width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }

    .col-2-of-4 {
        width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal});
    }

    .col-3-of-4 {
        width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal});
    }

}