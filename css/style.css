/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/


/* This part resets the whole styling */
* { /* Declares each and every element */ 
    margin: 0; /* By default, browsers apply a margin & padding already */
    padding: 0;
    box-sizing: border-box; /* Changes model so margin & padding isn't added to total width or height */
}

body { /* Put font here because font is usually inherited */
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7; /* 1.7x bigger than default */
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh; /* 95% of viewport height */
    background-image: linear-gradient(
        to right bottom, 
        rgba(230, 233, 227, 0.8), 
        rgba(40, 180, 131, 0.8)), 
        url(../img/hero.jpg); /* Gradient is always back-ground image. From light green to dark green*/
    background-size: cover; /* Will always try to fit element into width of box */
    background-position: top; /* When adjusting viewport size, top of image will remain the same */
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.logo-box {
    position: absolute;
    top: 40px; /* This shifts due to the position of the parent element-- header */
    left: 40px;
}

.logo {
    height: 35px;
}

 /* Centers the header */
.text-box {
    position: absolute;
    top: 40%; /* This moves the element in relation to parent element */
    left: 50%;
    transform: translate(-50%, -50%); /* The transform is in no relation to the parent element, but of the element itself */
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    backface-visibility: hidden;
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;

}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation-name: moveInRight;
    animation-duration: 1s;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(30px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.btn:visited { /* Applies to links that haven't been visited yet */
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    border-radius: 100px;
    transition: all 0.2s;
    position: relative;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2); /* x, y, blur amount */
}

.btn-white {
    background-color: #fff;
    color: #777
}

/* This is the start of the hover fade out effect */
.btn::after { /* This will be below the element. Child of element */
    content: ""; /* ALWAYS required */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute; /* Needs a reference which is the first element with a relative position it can find. Will make this go underneath element */
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s
}

.btn-white::after {
    background-color: #fff;
}

/* This will give the button hover the fade out effect */
.btn:hover::after { /* When we hover, we want some after elements */
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0; /* Sets it to 0 */
}

.btn-animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
}